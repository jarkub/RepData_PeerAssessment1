theme(panel.grid.major.y = element_blank(), # no horizontal grid lines
legend.position=c(1, 0.55),
legend.justification=c(1, 0.5)
)
?geog_segment
?geom_segment
ggplot(tophit, aes(x=avg, y=name)) +
geom_segment(aes(yend=name), xend=0, color="grey50") +
geom_point(size=3, aes(color=lg)) +
scale_color_brewer(palette="Set1", limits=c("NL","AL"), guide=FALSE) +
theme_bw() +
theme(panel.grid.major.y = element_blank())
facet_grid(lg ~ ., scales="free_y", space="free_y")
ggplot(tophit, aes(x=avg, y=name)) +
geom_segment(aes(yend=name), xend=0, color="grey50") +
geom_point(size=3, aes(color=lg)) +
scale_color_brewer(palette="Set1", limits=c("NL","AL"), guide=FALSE) +
theme_bw() +
theme(panel.grid.major.y = element_blank()) +
facet_grid(lg ~ ., scales="free_y", space="free_y")
ggplot(tophit, aes(x=avg, y=name)) +
geom_segment(aes(yend=name), xend=0, color="grey50") +
geom_point(size=3, aes(color=lg)) +
scale_color_brewer(palette="Set1", limits=c("NL","AL"), guide=FALSE) +
theme_bw() +
theme(panel.grid.major.y = element_blank())
rm(list=ls())
BOD
BOD
ggplot(BOD, aes(x=Time, y=demand)) + geom_line()
library(ggplot2)
ggplot(BOD, aes(x=Time, y=demand)) + geom_line()
BOD1 <- BOD # make copy
BOD1$Time <- factor(BOD1$Time)
ggplot(BOD1, aes(x=Time, y=demand, group=1)) + geom_line()
ggplot(BOD, aes(x=Time, y=demand)) + geom_line() + ylim(0, max(BOD$demand))
ggplot(BOD, aes(x=Time, y=demand)) + geom_line() + expand_limits(y=0)
ggplot(BOD, aes(x=Time, y=demand)) + geom_line()
ggplot(BOD, aes(x=Time, y=demand)) + geom_line() + ylim(0, max(BOD$demand))
ggplot(BOD, aes(x=Time, y=demand)) + geom_line()
ggplot(BOD, aes(x=Time, y=demand)) + geom_line() + ylim(0, max(BOD$demand))
ggplot(BOD, aes(x=Time, y=demand)) + geom_line()
ggplot(BOD, aes(x=Time, y=demand)) + geom_line() + expand_limits(y=0)
library(gcookbook)
ggplot(BOD, aes(x=Time, y=demand)) + geom_line() + geom_point()
ggplot(BOD, aes(x=Time, y=demand)) + geom_line() + geom_point()
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point()
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point() + scale_y_log10()
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point()
ggplot(worldpop, aes(x=Year, y=Population)) + geom_line() + geom_point() + scale_y_log10()
?log
log(1000000, base=10)
exp(1)
log(6000000, base=10)
install.packages("RCurl")
install.packages("RCurl")
library(RCurl)
google_docs = "https://docs.google.com/spreadsheet/"
cereals_key = "pub?key=0AjoVnZ9iB261dEljWDZiWS1reVh1UFNKdE5EcVRvSkE&output=csv"
cereals_csv = getURL(paste(google_docs, cereals_key, sep = ""))
cereals_csv = download.file(paste(google_docs, cereals_key, sep = ""))
getwd()
download.file(paste(google_docs, cereals_key, sep = ""), "./cereals.csv")
?download.file
download.file(paste(google_docs, cereals_key, sep = ""), "./cereals.csv", mode="wb")
read.csv("./cereals.csv")
cereals_csv = getURL(paste(google_docs, cereals_key, sep = ""))
cereals = read.csv(textConnection(cereals_csv), row.names = 1, header = TRUE)
str(cereals)
cereals <- read.csv("./cereals.csv")
str(cereals)
cereals$Calories
scale(cereals$Calories, center = TRUE, scale = FALSE)
mean(cereals$Calories)
scale(cereals$Calories, center = TRUE, scale = TRUE)
var(cereals$Calories)
sqrt(var(cereals$Calories))
scale(cereals$Calories, center = TRUE, scale = TRUE)
mean(cereals$Calories)
sqrt(var(cereals$Calories))
X = scale(cereals, center=TRUE, scale=FALSE)
str(cereals)
str(cereals, vec.len = 1)
?str
names(cereal)
names(cereals)
cereals <- read.csv("./cereals.csv", row.names = 1, header=TRUE)
str(cereals, vec.len = 1)
X = scale(cereals, center=TRUE, scale=FALSE)
cal <- scale(cereals$Calories, center = TRUE, scale = TRUE)
mean(cal)
mean(cereals$Calories)
colMeans(X)
assoc_variables = t(X) %*% X
dim(assoc_variables)
assoc_variables
dim(assoc_objects)
assoc_objects = X %*% t(X)
dim(assoc_objects)
assoc_objects
?tidyr
??tidyr
?gc
memory.limit()
?memory.limit
sessionInfo()
optmetrics <- read.xlsx("C:\Users\Jared Kubly\Dropbox\mediaFORGE\Analytics Team\Tableau Tables\Opt Metrics_Most Recent.xlsx")
optmetrics <- read.xlsx("C:/Users/Jared Kubly/Dropbox/mediaFORGE/Analytics Team/Tableau Tables/Opt Metrics_Most Recent.xlsx")
library(xlsx)
library(xlsx)
optmetrics <- read.xlsx("C:/Users/Jared Kubly/Dropbox/mediaFORGE/Analytics Team/Tableau Tables/Opt Metrics_Most Recent.xlsx")
optmetrics <- read.xlsx("C:/Users/Jared Kubly/Dropbox/mediaFORGE/Analytics Team/Tableau Tables/Opt Metrics_Most Recent.xlsx", 1)
optmetrics <- read.xlsx("C:/Users/Jared Kubly/Dropbox/mediaFORGE/Analytics Team/Tableau Tables/Opt Metrics_Most Recent.xlsx", 1)
?xlsx
??xlsx
library(xlsx)
optmetrics <- read.xlsx("C:/Users/Jared Kubly/Dropbox/mediaFORGE/Analytics Team/Tableau Tables/Opt Metrics_Most Recent.xlsx", 1)
library(xlsx2)
optmetrics <- read.xlsx2("C:/Users/Jared Kubly/Dropbox/mediaFORGE/Analytics Team/Tableau Tables/Opt Metrics_Most Recent.xlsx", 1)
xlsxpath <- "C:/Users/Jared Kubly/Dropbox/mediaFORGE/Analytics Team/Tableau Tables/Opt Metrics_Most Recent.xlsx"
require(RODBC)
conn = odbcConnectExcel(path)
sqlTables(conn)$TABLE_NAME
path <- "C:/Users/Jared Kubly/Dropbox/mediaFORGE/Analytics Team/Tableau Tables/Opt Metrics_Most Recent.xlsx"
data <- read.csv(path)
data
memory.limit()
memory.uasge()
??memory
memory.size()
memory.size(T)
memory.size(F)
session.info()
session.Info()
sessionInfo()
options(java.parameters)
options("java.parameters")
options(java.parameters = "-Xms1024m")
path <- "C:/Users/Jared Kubly/Dropbox/mediaFORGE/Analytics Team/Tableau Tables/Opt Metrics_Most Recent.xlsx"
optmetrics <- read.xlsx2(path, 1)
options(java.parameters = "-Xms2g")
optmetrics <- read.xlsx2(path, 1)
options("java.parameters")
options(java.parameters = "-Xms2g")
library(xlsx)
path <- "C:/Users/Jared Kubly/Dropbox/mediaFORGE/Analytics Team/Tableau Tables/Opt Metrics_Most Recent.xlsx"
optmetrics <- read.xlsx2(path, 1)
options("java.parameters")
options(java.parameters = "-Xms1g")
library(xlsx)
path <- "C:/Users/Jared Kubly/Dropbox/mediaFORGE/Analytics Team/Tableau Tables/Opt Metrics_Most Recent.xlsx"
optmetrics <- read.xlsx(path, 1)
path <- "C:/Users/Jared Kubly/Dropbox/mediaFORGE/Analytics Team/Tableau Tables/Opt Metrics_Most Recent.xlsx"
optmetrics <- read.xlsx2(path, 1)
head(optmetrics)
str(optmetrics)
?read.xlsx2
??colClasses
optmetrics <- read.xlsx2(path, sheetINdex=1, colClasses=c("Date", "character", "numeric", "character", "character", "character", "character", "factor", "factor",
"numeric", "numeric", "numeric", "numeric", "numeric", "factor", "character", "factor"))
optmetrics <- read.xlsx2(path, sheetIndex=1, colClasses=c("Date", "character", "numeric", "character", "character", "character", "character", "factor", "factor",
"numeric", "numeric", "numeric", "numeric", "numeric", "factor", "character", "factor"))
optmetrics <- read.xlsx2(path, sheetIndex=1, colClasses=c("Date", "character", "numeric", "character", "character", "character", "character", "character", "character",
"numeric", "numeric", "numeric", "numeric", "numeric", "character", "character", "character"))
library(ggplot2)
library(gcookbook)
library(plyr)
ggplot(BOD, aes(x=Time, y=demand)) + geom_line() + geom_point(size = 4, shape = 22, color = "darkred", fill = "pink")
library(ggplot2)
install.packages("Rcpp\")
9
()
0
)
)
""
" )
install.packages("Rcpp")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(gcookbook)
library(plyr)
ggplot(BOD, aes(x=Time, y=demand)) + geom_line() + geom_point(size = 4, shape = 22, color = "darkred", fill = "pink")
ggplot(BOD, aes(x=Time, y=demand)) + geom_line() + geom_point(size=4, shape=21, fill="white")
ggplot(BOD, aes(x=Time, y=demand)) + geom_point(size=4, shape=21, fill="white") + geom_line()
tg <- ddply(ToothGrowth, c("supp", "dose"), summarise, length=mean(len))
ggplot(tg, aes(x=dose, y=length, fill=supp)) + geom_line(position-pd) +
geom_point(shape=21, size=3, position=pd) +
scale_fill_manual(values=c("black","white"))
ggplot(tg, aes(x=dose, y=length, fill=supp)) + geom_line(position=pd) +
geom_point(shape=21, size=3, position=pd) +
scale_fill_manual(values=c("black","white"))
pd <- position_dodge(0.2)
ggplot(tg, aes(x=dose, y=length, fill=supp)) + geom_line(position=pd) +
geom_point(shape=21, size=3, position=pd) +
scale_fill_manual(values=c("black","white"))
sunspotyear <- data.frame(Year = as.numeric(time(sunspot.year)), Sunspots = as.numeric(sunspot.year))
sunspot.year
class(sunspot.year)
names(sunspot.year)
str(sunspot.year)
ggplot(sunspotyear, aes(x=Year, y=Sunspots)) + geom_area()
gg.sunspot <- ggplot(sunspotyear, aes(x=Year, y=Sunspots))
gg.sunspot + geom_area()
gg.sunspot + geom_area(fille="blue", alpha=0.2) + geom_line()
gg.sunspot + geom_area(fille="blue", alpha=0.2)
gg.sunspot + geom_area(fille="blue", alpha=0.2) + geom_line()
gg.sunspot + geom_area(fill="blue", alpha=0.2) + geom_line()
gg.sunspot + geom_area(fill="blue", alpha=0.2)
gg.sunspot + geom_area(fill="blue", alpha=0.2) + geom_line()
ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) + geom_area()
uspopage
uspopage.g <- group_by(uspopage, year, AgeGroup)
library(dplyr)
uspopage.g <- group_by(uspopage, year, AgeGroup)
names(uspopage)
uspopage.g <- group_by(uspopage, Year, AgeGroup)
uspopage.g
summarize(uspopage.g, n())
summarize(uspopage.g, Thousands/sum(Thousands)
)
summarize(uspopage.g, Thousands/sum(Thousands))
uspopage.g <- group_by(uspopage, Year)
summarize(uspopage.g, Thousands/sum(Thousands))
summarize(uspopage.g, n/n())
uspopage.g <- group_by(uspopage, Year, AgeGroup)
summarize(uspopage.g, n/n())
summarize(uspopage.g, Thousands/n())
uspopage.g <- group_by(uspopage, Year)
summarize(uspopage.g, Thousands/sum(Thousands))
summarize(uspopage.g, n()/sum(n())
)
summarize(uspopage.g, Thousands/sum(Thousands))
summarize(uspopage.g, sum(Thousands))
sumThousands <- summarize(uspopage.g, sum(Thousands))
join(uspopage, sumThousands, by = Year)
?join
join(uspopage, sumThousands, by = "Year"")
join(uspopage, sumThousands, by = "Year")
uspopage.new <- join(uspopage, sumThousands, by = "Year")
mustate(uspopage.new, pop.prop = Thousands/sum(Thousands))
mutate(uspopage.new, pop.prop = Thousands/sum(Thousands))
uspopage.new <- mutate(uspopage.new, pop.prop = Thousands/sum(Thousands))
ggplot(uspopage.new, aes(x=Year, y=pop.prop, fill=AgeGroup)) + geom_area()
uspopage.g <- group_by(uspopage, Year)
sumThousands <- summarize(uspopage.g, sum(Thousands))
uspopage.new <- join(uspopage, sumThousands, by = "Year")
uspopage.new <- mutate(uspopage.new, pop.prop = Thousands/sum(Thousands))
uspopage.new <- mutate(sumThousanda = summarize(uspopage.g, sum(Thousands)))
sumThousands <- summarize(uspopage.g, sumThousands=sum(Thousands))
sumThousands
sumThousands <- summarize(uspopage.g, sumThousands=sum(Thousands))
uspopage.new <- join(uspopage, sumThousands, by = "Year")
uspopage.new
uspopage.new <- mutate(uspopage.new, pop.prop = Thousands/sumThousands)
uspopage.new
ggplot(uspopage.new, aes(x=Year, y=pop.prop, fill=AgeGroup)) + geom_area()
ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) +
geom_area(color="black", size=.2, alpha=.4) +
scale_fill_brewer(palette="Blues", breaks=rev(levels(uspopage$AgeGroup)))
ggplot(uspopage.mew, aes(x=Year, y=Thousands, fill=AgeGroup)) +
geom_area(color="black", size=.2, alpha=.4) +
scale_fill_brewer(palette="Blues", breaks=rev(levels(uspopage.new$AgeGroup)))
ggplot(uspopage.new, aes(x=Year, y=Thousands, fill=AgeGroup)) +
geom_area(color="black", size=.2, alpha=.4) +
scale_fill_brewer(palette="Blues", breaks=rev(levels(uspopage.new$AgeGroup)))
ggplot(uspopage.new, aes(x=Year, y=pop.prop, fill=AgeGroup)) +
geom_area(color="black", size=.2, alpha=.4) +
scale_fill_brewer(palette="Blues", breaks=rev(levels(uspopage.new$AgeGroup)))
ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup)) +
geom_area(color="black", size=.2, alpha=.4) +
scale_fill_brewer(palette="Blues", breaks=rev(levels(uspopage$AgeGroup)))
ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup, order=desc(AgeGRoup))) +
geom_area(color=NA, alpha=.4) +
scae_fill_brewer(palette="Blues")
ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup, order=desc(AgeGRoup))) +
geom_area(color=NA, alpha=.4) +
scale_fill_brewer(palette="Blues")
ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup, order=desc(AgeGroup))) +
geom_area(color=NA, alpha=.4) +
scale_fill_brewer(palette="Blues")
ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup, order=desc(AgeGroup))) +
geom_area(color=NA, size=.2, alpha=.4) +
scale_fill_brewer(palette="Blues")
ggplot(uspopage, aes(x=Year, y=Thousands, fill=AgeGroup, order=desc(AgeGroup))) +
geom_area(color=NA, size=.2, alpha=.4) +
scale_fill_brewer(palette="Blues") +
geom_line(position="stack", size=.2)
uspopage_prop <- ddply(uspopage, "Year", transform, Percent = Transform / sum(Thousands) * 100)
ggplot(uspopage_prop, aes(x=Year, y=Percent, fill=AgeGroup)) +
geom_area(color="black", size=.2, alpha=.4) +
scale_fill_brewer(palette="Blues", breaks=rev(levels(uspopage$AgeGroup)))
library(plyr)
uspopage_prop <- ddply(uspopage, "Year", transform, Percent = Transform / sum(Thousands) * 100)
uspopage_prop <- ddply(uspopage, "Year", transform, Percent = Thousands / sum(Thousands) * 100)
ggplot(uspopage_prop, aes(x=Year, y=Percent, fill=AgeGroup)) +
geom_area(color="black", size=.2, alpha=.4) +
scale_fill_brewer(palette="Blues", breaks=rev(levels(uspopage$AgeGroup)))
clim <- subset(climeate, Soure == "Berkeley", select=c("Year", "Anomaly10y", "Unc10y"))
clim <- subset(climate, Soure == "Berkeley", select=c("Year", "Anomaly10y", "Unc10y"))
clim <- subset(climate, Source == "Berkeley", select=c("Year", "Anomaly10y", "Unc10y"))
clim
head(clim)
ggplot(clim, aes(x=Year, y=Anomaly10y)) +
geom_ribbon(aes(ymin=Anomaly10y-Unc10y, ymax=Anomaly10y+Unc10y), alpha=0.2)
ggplot(clim, aes(x=Year, y=Anomaly10y)) +
geom_ribbon(aes(ymin=Anomaly10y-Unc10y, ymax=Anomaly10y+Unc10y), alpha=0.2) +
geom_line()
ggplot(clim, aes(x=Year, y=Anomaly10y)) +
geom_line(aes(y=Anomaly10y-Unc10y), color="grey50", linetype="dotted") +
geom_line(aes(y-Anomaly10y+Unc10y), color="grey50", linetype="dotted") +
geom_line()
ggplot(clim, aes(x=Year, y=Anomaly10y)) +
geom_line(aes(y=Anomaly10y-Unc10y), color="grey50", linetype="dotted") +
geom_line(aes(y=Anomaly10y+Unc10y), color="grey50", linetype="dotted") +
geom_line()
ggplot(clim, aes(x=Year, y=Anomaly10y)) +
geom_line(aes(y=Anomaly10y-Unc10y), color="grey50", linetype="dotted") +
geom_line(y=Anomaly10y+Unc10y, color="grey50", linetype="dotted") +
geom_line()
ggplot(clim, aes(x=Year, y=Anomaly10y)) +
geom_line(aes(y=Anomaly10y-Unc10y), color="grey50", linetype="dotted") +
geom_line(clim, y=Anomaly10y+Unc10y, color="grey50", linetype="dotted") +
geom_line()
ggplot(clim, aes(x=Year, y=Anomaly10y)) +
geom_line(aes(y=Anomaly10y-Unc10y), color="grey50", linetype="dotted") +
geom_line(aes(y=Anomaly10y+Unc10y), color="grey50", linetype="dotted") +
geom_line()
head(clim)
library(gcookbook)
rm(list=ls())
heightweight[, c("ageYear", "heightIn")]
head(heightweight[, c("ageYear", "heightIn")])
ggplot(heightweight, aes=x(ageYear, y=heightIn)) + geom_point()
library(gcookbook)
ggplot(heightweight, aes=x(ageYear, y=heightIn)) + geom_point()
library(ggplot2)
ggplot(heightweight, aes=x(ageYear, y=heightIn)) + geom_point()
ggplot(heightweight, aes=(x=ageYear, y=heightIn)) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn)) + geom_point()
g + geom_points(shape=21)
g <- ggplot(heightweight, aes(x=ageYear, y=heightIn))
g + geom_point()
g + geom_points(shape=21)
g + geom_point(shape=21)
g + geom_point(22)
g + geom_point(size=1.5)
ggplot(heightweight, aes(x=ageYear, y=heightIn, color=sex)) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn, shape=sex)) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn, color=sex, shape=sex)) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn, shape=sex, colour=sex)) +
geom_point() +
scale_shape_manual(values=c(1,2)) +
scale_colour_brewer(paletter="Set1")
ggplot(heightweight, aes(x=ageYear, y=heightIn, shape=sex, colour=sex)) +
geom_point() +
scale_shape_manual(values=c(1,2)) +
scale_colour_brewer(palette="Set1")
ggplot(heightweight, aes(x=ageYear, y=heightIn)) + geom_point(shape=3)
ggplot(heightweight, aes(x=ageYear, y=heightIn, shape=sex)) +
geom_point(size=3) +
scale_shape_manual(values=c(1,4))
example(pch)
pchShow()
pchShow(c("o","O","0"), cex = 2.5)
pchShow()
names(hw)
names(heightweight)
hw$weightGroup <- cut(hw$weightLb, breaks=c(-Inf, 100, Inf), labels=c("< 100", ">= 100"))
hw <- heightweight
# create category
hw$weightGroup <- cut(hw$weightLb, breaks=c(-Inf, 100, Inf), labels=c("< 100", ">= 100"))
ggplot(hw, aes(x=ageYear, y=heightIn, shape=sex, fill=weightGroup)) +
geom_point(size=2.5)
ggplot(hw, aes(x=ageYear, y=heightIn, shape=sex, fill=weightGroup)) +
geom_point(size=2.5, shape=21)
ggplot(hw, aes(x=ageYear, y=heightIn, shape=sex, fill=weightGroup)) +
geom_point(size=3) +
svale_shape_manual(values=c(1,4))
ggplot(hw, aes(x=ageYear, y=heightIn, shape=sex, fill=weightGroup)) +
geom_point(size=3) +
scale_shape_manual(values=c(1,4))
ggplot(hw, aes(x=ageYear, y=heightIn, shape=sex, fill=weightGroup)) +
geom_point(size=2.5) +
scale_shape_manual(values=c(21, 24)) +
scale_fill_manual(values=c(NA, "black"), guide=guide_legend(override.aes=list(shape=21)))
ggplot(hw, aes(x=ageYear, y=heightIn, shape=sex, fill=weightGroup)) +
geom_point(size=2.5) +
scale_shape_manual(values=c(21, 24)) +
scale_fill_manual(values=c(NA, "black")
))
ggplot(hw, aes(x=ageYear, y=heightIn, shape=sex, fill=weightGroup)) +
geom_point(size=2.5) +
scale_shape_manual(values=c(21, 24)) +
scale_fill_manual(values=c(NA, "black")
)
ggplot(hw, aes(x=ageYear, y=heightIn, shape=sex, fill=weightGroup)) +
geom_point(size=2.5, shape=21)
ggplot(hw, aes(x=ageYear, y=heightIn, shape=sex, fill=weightGroup)) +
geom_point(size=2.5, shape=c(21, 24))
ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=weightLb)) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=revers(weightLb)) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=reverse(weightLb)) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=reverse(weightLb)) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=reverse(weightLb))) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=reverse(weightLb))) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=desc(weightLb))) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=weightLb)) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=desc(weightLb))) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn, colour=weightLb)) + geom_point()
ggplot(heightweight, aes(x=ageYear, y=heightIn, size=weightLb)) + geom_point()
ggplot(heightweight, aes(x=weightLb, y=heightIn, fill=ageYear)) +
geom_point(shape=21, size=2.5) +
scale_fill_gradient(low="black", high="white")
ggplot(heightweight, aes(x=weightLb, y=heightIn, fill=ageYear)) +
geom_point(shape=21, size=2.5) +
scale_fill_gradient(low="black", high="white", breaks=12:17, guide=guide_legend())
ggplot(heightweight, aes(x=weightLb, y=heightIn, fill=ageYear)) +
geom_point(shape=21, size=2.5) +
scale_fill_gradient(low="black", high="white", breaks=12:17)
ggplot(heightweight, aes(x=weightLb, y=heightIn, fill=ageYear)) +
geom_point(shape=21, size=2.5) +
scale_fill_gradient(low="black", high="white", , guide=guide_legend())
ggplot(heightweight, aes(x=weightLb, y=heightIn, fill=ageYear)) +
geom_point(shape=21, size=2.5) +
scale_fill_gradient(low="black", high="white", guide=guide_legend())
ggplot(heightweight, aes(x=weightLb, y=heightIn, fill=ageYear)) +
geom_point(shape=21, size=2.5) +
scale_fill_gradient(low="black", high="white", breaks=12:17, guide=guide_legend())
ggplot(heightweight, aes(x=ageYear, y=heightIn, size=weightLb, colour=sex)) +
geom_point(alpha=.5) +
scale_size_area() +
scale_colour_brewer(palette="Set1")
sp <- ggplot(diamonds, aes(x=carat, y=price))
sp + geom_point()
sp + geom_point(alpha=0.1)
sp + geom_point(alpha=0.01)
sp + stat_bin_2d()
sp + stat_bin2d()
scale_fill_gradient(low="lightblue", high="red", limits=c(0, 6000))
sp + stat_bin2d(bins=50) +
scale_fill_gradient(low="lightblue", high="red", limits=c(0, 6000))
install.packages("hexbin")
library(hexbin)
scale_fill_gradient(low="lightblue", high="red", limits=c(0, 8000))
sp + stat_binhex() +
scale_fill_gradient(low="lightblue", high="red", limits=c(0, 8000))
sp + stat_binhex() +
scale_fill_gradient(low="lightblue", high="red",
breaks=c(0, 250, 500, 1000, 2000, 4000, 6000),
limits=c(0, 6000))
?hist
getwd()
setwd("JHU_Data_Science/5_Reproducible/Project1//RepData_PeerAssessment1")
getwd()
if(file.exists("./activity")) {
unzip("./activity.zip")
}
?unzip
list.files()
unzip("./activity.zip")
data <- read.csv("./activity.csv")
head(data)
library(dplyr)
head(data)
data.group <- summarize(group_by(data, date), mean(steps), na.rm=TRUE)
head(data.group)
data.group <- summarize(group_by(data, date), mean(steps, na.rm=TRUE))
head(data.group)
data.group <- summarize(group_by(data, date), mean_steps = mean(steps, na.rm=TRUE))
head(data.group)
data.group <- summarize(group_by(data, date),
sum_steps = sum(steps, na.rm=TRUE),
mean_steps = mean(steps, na.rm=TRUE))
head(data.group)
hist(data.group$sum_steps)
data.group <- summarize(group_by(data, date),
sum_steps = sum(steps, na.rm=TRUE),
mean_steps = mean(steps, na.rm=TRUE),
median_steps = median(steps, na.rm=TRUE))
library(xtable)
# The mean number of steps taken per day is
xtable(data.group)
print(xtable(data.group), type="html")
head(data.group)
?xtable
?print
data.group <- summarize(group_by(data, date),
sum = sum(steps, na.rm=TRUE),
mean = mean(steps, na.rm=TRUE),
median = median(steps, na.rm=TRUE))
head(data.group)
head(xtable(data.group))
data.group.print <- data.group
data.group.print <- round(data.group.print, 2)
data.group.print[,2:4] <- round(data.group.print[,2:4], 2)
data.group.print[is.na(data.group.print)] = "NA"
median(data.group$steps)
median(data$steps, na.rm=T)
data$steps
?median
head(data)
data.group <- summarize(group_by(data,interval),
mean = mean(step, na.rm=TRUE))
data.group <- summarize(group_by(data,interval),
mean = mean(steps, na.rm=TRUE))
plot(mean ~ interval, data=data.group, type="l")
which.max(data.group$steps)
which.max(data.group$mean)
?which.max
data.group$interval[which.max(data.group$mean)]
